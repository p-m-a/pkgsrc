$NetBSD: patch-configure.in,v 1.5.2.1 2013/06/09 19:35:15 tron Exp $

* Adding Interix and MirBSD support.
* Ignore doxygen.

--- configure.in.orig	2013-05-14 15:26:08.000000000 +0000
+++ configure.in
@@ -1136,6 +1136,8 @@ main()
 		],
 [superux*], [	ac_cv_func_setitimer=no
 		],
+[interix*], [	LIBS="-lm $LIBS"
+		ac_cv_func_getpgrp_void=yes],
 [	LIBS="-lm $LIBS"])
 AC_CHECK_LIB(crypt, crypt)
 AC_CHECK_LIB(dl, dlopen)	# Dynamic linking for SunOS/Solaris and SYSV
@@ -1176,7 +1178,12 @@ AC_CHECK_HEADERS(limits.h sys/file.h sys
 		 syscall.h pwd.h grp.h a.out.h utime.h direct.h sys/resource.h \
 		 sys/mkdev.h sys/utime.h xti.h netinet/in_systm.h float.h ieeefp.h \
 		 ucontext.h intrinsics.h langinfo.h locale.h sys/sendfile.h time.h \
-		 net/socket.h sys/socket.h process.h atomic.h)
+		 net/socket.h sys/socket.h process.h atomic.h,,,[
+@%:@include <sys/types.h>
+@%:@ifdef HAVE_SYS_TIME_H
+@%:@include <sys/time.h>
+@%:@endif
+])
 
 AC_TYPE_SIZE_T
 RUBY_CHECK_SIZEOF(size_t, [int long void*], [], [@%:@include <sys/types.h>])
@@ -1209,6 +1216,9 @@ AC_CHECK_TYPES([struct timeval], [], [],
 
 AC_CHECK_TYPES([struct timespec], [], [], [@%:@ifdef HAVE_TIME_H
 @%:@include <time.h>
+@%:@endif
+@%:@ifdef HAVE_SYS_TIME_H
+@%:@ include <sys/time.h>
 @%:@endif])
 
 AC_CHECK_TYPES([struct timezone], [], [], [@%:@ifdef HAVE_TIME_H
@@ -1801,7 +1811,7 @@ if test x"$enable_pthread" = xyes; then
 	[root], [],
 	[c_r],  [MAINLIBS="-pthread $MAINLIBS"],
 	        [AS_CASE(["$target_os"],
-		    [openbsd*], [LIBS="-pthread $LIBS"],
+		    [openbsd*|mirbsd*], [LIBS="-pthread $LIBS"],
 		    [LIBS="-l$pthread_lib $LIBS"])])
     else
 	AC_MSG_WARN("Don't know how to find pthread library on your system -- thread support disabled")
@@ -2032,7 +2042,9 @@ if test "$with_dln_a_out" != yes; then
 			rb_cv_dlopen=yes],
 	[interix*], [	: ${LDSHARED='$(CC) -shared'}
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
+			DLDFLAGS="$DLDFLAGS "'-Wl,-h,$(.TARGET) -Wl,--image-base,$$(($$RANDOM %4096/2*262144+1342177280))'
 			LIBPATHFLAG=" -L%1\$-s"
+			RPATHFLAG=' -Wl,-R%1$-s'
 			rb_cv_dlopen=yes],
 	[freebsd*|dragonfly*], [
 			: ${LDSHARED='$(CC) -shared'}
@@ -2043,7 +2055,7 @@ if test "$with_dln_a_out" != yes; then
 			  test "$GCC" = yes && test "$rb_cv_prog_gnu_ld" = yes || LDSHARED="ld -Bshareable"
 			fi
 			rb_cv_dlopen=yes],
-	[openbsd*], [	: ${LDSHARED='$(CC) -shared ${CCDLFLAGS}'}
+	[openbsd*|mirbsd*], [	: ${LDSHARED='$(CC) -shared ${CCDLFLAGS}'}
 			if test "$rb_cv_binary_elf" = yes; then
 			    LDFLAGS="$LDFLAGS -Wl,-E"
 			fi
@@ -2344,7 +2356,7 @@ AS_CASE("$enable_shared", [yes], [
 	],
     [freebsd*|dragonfly*], [
 	SOLIBS='$(LIBS)'
-	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR)$(TEENY)'
 	if test "$rb_cv_binary_elf" != "yes" ; then
 	    LIBRUBY_SO="$LIBRUBY_SO.\$(TEENY)"
 	    LIBRUBY_ALIASES=''
@@ -2360,7 +2372,7 @@ AS_CASE("$enable_shared", [yes], [
 	   LIBRUBY_ALIASES=""
 	fi
 	],
-    [openbsd*], [
+    [openbsd*|mirbsd*], [
 	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR).'`expr ${MINOR} \* 10 + ${TEENY}`
 	],
@@ -2410,7 +2422,12 @@ AS_CASE("$enable_shared", [yes], [
 	LIBRUBY_ALIASES='lib$(RUBY_BASE_NAME).$(MAJOR).$(MINOR).dylib lib$(RUBY_INSTALL_NAME).dylib'
 	],
     [interix*], [
-	LIBRUBYARG_SHARED='-L. -L${libdir} -l$(RUBY_SO_NAME)'
+	SOLIBS='$(LIBS)'
+	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR).$(TEENY)'
+	# link explicitly to 0x48000000
+	LIBRUBY_DLDFLAGS='-Wl,-h,lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) -Wl,--image-base,1207959552'
+	LIBRUBYARG_SHARED='-Wl,-R -Wl,${libdir} -L${libdir} -L. -l$(RUBY_SO_NAME)'
+	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR) lib$(RUBY_SO_NAME).so'
 	])
 ], [
   LIBRUBYARG_SHARED=
@@ -2455,11 +2472,7 @@ if test "$install_doc" != no; then
     else
 	RDOCTARGET="nodoc"
     fi
-    if test "$install_capi" != no -a -n "$DOXYGEN"; then
-	CAPITARGET="capi"
-    else
-	CAPITARGET="nodoc"
-    fi
+    CAPITARGET="nodoc"
 else
     RDOCTARGET="nodoc"
     CAPITARGET="nodoc"
